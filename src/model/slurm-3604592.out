This job can be monitored from: https://job.c3se.chalmers.se/alvis/3604592
begin generate
/cephyr/users/guangjin/Alvis/Desktop/LQR/FM-DISAC/src/model/../../../pytorch-image-models/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
/apps/Arch/software/PyTorch-Lightning/2.2.1-foss-2023a-CUDA-12.1.1/lib/python3.11/site-packages/lightning_fabric/plugins/environments/slurm.py:204: The `srun` command is available on your system but is not used. HINT: If your intention is to run Lightning on SLURM, prepend your python command with `srun` like so: srun python train.py ...
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
You are using a CUDA device ('NVIDIA A40') that has Tensor Cores. To properly utilize them, you should set `torch.set_float32_matmul_precision('medium' | 'high')` which will trade-off precision for performance. For more details, read https://pytorch.org/docs/stable/generated/torch.set_float32_matmul_precision.html#torch.set_float32_matmul_precision
/apps/Arch/software/PyTorch-Lightning/2.2.1-foss-2023a-CUDA-12.1.1/lib/python3.11/site-packages/pytorch_lightning/callbacks/model_checkpoint.py:653: Checkpoint directory /cephyr/users/guangjin/Alvis/Desktop/LQR/FM-DISAC/pretrained_model/model exists and is not empty.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name          | Type     | Params
-------------------------------------------
0 | channel_fdmdl | ASTModel | 5.9 M 
-------------------------------------------
5.9 M     Trainable params
2         Non-trainable params
5.9 M     Total params
23.490    Total estimated model params size (MB)
/apps/Arch/software/PyTorch-Lightning/2.2.1-foss-2023a-CUDA-12.1.1/lib/python3.11/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:492: Your `val_dataloader`'s sampler has shuffling enabled, it is strongly recommended that you turn shuffling off for val/test dataloaders.
4 4 64 32 4 4
pretraining patch split stride: frequency=4, time=4
pretraining patch shape: frequency=4, time=4
pretraining patch array dimension: frequency=16, time=8
pretraining number of patches=128
PatchEmbed(
  (proj): Conv2d(2, 192, kernel_size=(4, 4), stride=(4, 4))
  (norm): Identity()
)
